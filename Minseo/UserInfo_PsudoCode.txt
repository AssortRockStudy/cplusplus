## 회원정보 관리 프로그램

1. 이름으로 정보 검색
2. 회원 정보 수정
3. 회원 생성시 중복 체크
4. 이름순으로 정렬해서 출력 (역순 선택 가능하도록)
5. 성별에 따라, 나이대(10대, 20대 등)에 따라 필터링해서 출력
6. 회원 정보 삭제
7. 회원 그룹 정보 추가
- 이번주도 파일 입출력 하지 말 것. 자꾸 입력하는게 귀찮다면 해도 상관 x
- 가능 한 모든 경우의 예외처리 구현하기 바람!
- std::string, std::vector, std::list, std::map 사용 적극 추천

---

### 예상 구조

class User
{
	string 이름
	string 그룹
	int 성별
	int 나이
}
make_pair(이름, User)

---

1. 회원 등록 (O)
	1-) 회원 정보 입력 받기
		이름, 성별(남1, 여2), 나이를 입력받고
		유저 객체에 데이터를 저장

	1-) 회원 생성시 중복 체크
		데이터를 저장할 때 까지 반복
			만약 이름으로 map에서 탐색했을 때 반환 값이 end iterator라면
				이름을 수정할 것을 요청
			이름을 key 값으로, User를 second로 map에 전달	

	1-) 추가 입력 여부 묻기
		회원을 추가로 입력 받을 것인지를 물어보고 
		만약 회원을 추가로 입력 받는다면
			추가 입력(1로 이동)
		회원을 추가로 입력 받지 않는다면
			메인 화면으로 이동

2. 회원 출력
	2-1) 이름순으로 정렬해서 출력 (역순 선택 가능하도록)
	2-2) 성별에 따라, 나이대(10대, 20대 등)에 따라 필터링해서 출력
	2-3) 이름으로 정보 검색

3. 회원 정보 수정

	string 객체에 이름을 입력받는다.
	string 객체를 사용해 탐색을 통해 회원 정보를 받아온다.
	만약 반환을 받아온 iterator가 유효하지 않을 경우
		"해당 이름이 저장되어 있지 않습니다." 출력
		메인 화면으로 이동
	3-) 회원 그룹 정보 추가	
	음... 어떤 식으로 구현하는게 좋을까?
4. 회원 정보 삭제


5. 끝내기
	종료




	
	


